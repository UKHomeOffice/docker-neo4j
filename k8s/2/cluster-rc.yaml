---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: neo4j-2
  name: neo4j-2
spec:
  ports:
    -
      name: cluster
      port: 5001
      targetPort: 5001
    -
      name: transaction
      port: 6001
      targetPort: 6001
    - name: backup
      port: 6362
      targetPort: 6362
  selector:
    name: neo4j-2
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: neo4j-2
  name: neo4j-2
spec:
#  strategy: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      name: neo4j-2
  template:
    metadata:
      labels:
        name: neo4j-2
        app: neo4j
    spec:
      nodeSelector:
       failure-domain.beta.kubernetes.io/zone: eu-west-1b
      containers:
      - imagePullPolicy: Always
        name: vault-side-kick
        image: quay.io/ukhomeofficedigital/vault-sidekick:v0.2.0
        args:
          - -output=/etc/secrets
          - -tls-skip-verify=true
          - -cn=pki:services/${NAMESPACE}/pki/issue/default:common_name=neo4j.${NAMESPACE}.svc.cluster.local,file=neo4j,fmt=cert
          - -cn=secret:services/${NAMESPACE}/secrets/neo4j.properties:file=/config/neo4j.properties,fmt=txt
        env:
        - name: VAULT_ADDR
          value: https://vault.vault.svc.cluster.local:8200
        - name: VAULT_TOKEN
          valueFrom:
            secretKeyRef:
              name: store-token
              key: token
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace    
        volumeMounts:
          - name: certs
            mountPath: /etc/secrets
          - name: config
            mountPath: /config
        resources:
         limits:
          cpu: 200m
          memory: 400M
        imagePullPolicy: Always
      - image: quay.io/ukhomeofficedigital/neo4j:v0.0.3
        name: neo4j-2
        resources:
          limits:
            memory: "2G"
#              cpu: "100m"
        command:
         - bash
         - "-c"
         - >-
          sleep 20 & source /config/neo4j.properties && cp /ssl/neo4j.crt /ssl/neo4j.cert && /docker-entrypoint.sh neo4j
        ports:
        - containerPort: 7474
          name: "http"
        - containerPort: 7473
          name: "https"
        - containerPort: 5001
          name: "cluster"
        - containerPort: 6001
          name: "transaction"
        - containerPort: 6362
          name: backup
        env:
        - name: "NEO4J_dbms_mode"
          value: "HA"
        - name: NEO4J_AUTH
          value: "neo4j/sip"
        - name: NEO4J_ha_host_coordination
          value: 0.0.0.0:5001
        - name: NEO4J_ha_host_data
          value: 0.0.0.0:6001
        - name: "NEO4J_HA_ADDRESS"
          value: "0.0.0.0"
        - name: "NEO4J_ha_serverId"
          value: "2"
        - name: "NEO4J_ha_initialHosts"
          value: "neo4j-1:5001,neo4j-2:5001,neo4j-3:5001"
        volumeMounts: 
        - name: config
          mountPath: /config
        - name: data
          mountPath: /var/lib/neo4j/data
        - name: certs
          mountPath: /ssl
      restartPolicy: Always  
      volumes:
      - emptyDir: {}
        name: config
      - emptyDir: {}
        name: certs
      - name: data
        persistentVolumeClaim:
          claimName: neo4j.2
